#!/bin/sh

if [ "$1" = "-g" ] ; then
	menu="dmenu -i -l 44"
	browser="lh -g"
	shift
else
	menu="fzf -i"
	browser="lh"
fi

[ -z "$BM_DIR" ] \
  && echo "No directory specified!" \
  && exit 1

export GIT_WORK_TREE="$BM_DIR"
export GIT_DIR="$BM_DIR/.git"

add () {
	url="$1"
	[ "$1" = "-" ] && read url

	[ -z "$2" ] \
	  && title="$(curl --compressed --location $url \
	  | pup 'title text{}' | tr '\n' ' ' | sed -e 's/\s\+/ /g' -e 's/^ //' -e 's/ $//')" \
	  || title="$2"
	
	move "$url $title" unread
	
	"$NOTIFY" "Bookmark added! ($title)"
}

random () {
	shuf -n 1 | awk '{print $1}' | xargs $LINK_HANDLER
}

move () {
	url="$(echo "$1" | awk '{print $1}')"
	grep -q "$url" "$BM_DIR/$2" || (delete "$url" && echo "$1" >> "$BM_DIR/$2")
}

delete () {
	url="$(echo "$1" | sed 's_/_\\/_g')"
	sed -i "/$url/d" "$BM_DIR/unread"
	sed -i "/$url/d" "$BM_DIR/favorite"
	sed -i "/$url/d" "$BM_DIR/archive"
}

open () {
	url="$1"
	$browser "$url"
}

more () {
	url="$1"
	$browser -c "$url"
}

interactive () {
	list="$1"
	action="$2"
	actions="open\narchive\nfavorite\nunread\ndelete\nmore\n"
	line="$(awk '{print NR" "$0}' | $menu | awk '{$1 = ""; print $0}' | sed 's/^ //')"
	url="$(echo "$line" | awk '{print $1}')"
	if [ -z "$line" ]; then exit; fi
	[ -z "$action" ] && action="$(printf "$actions" | grep -v "$list" | $menu)"
	if [ -z "$action" ]; then exit; fi
	case "$action" in
		unread|favorite|archive) move "$line" "$action" ;;
		open|delete|more) "$action" "$url" ;;
	esac
}

sync () {
	git diff --quiet || git commit -am "Update"
	git pull && git push
	#rsync -avzu git@svenmoeller.xyz:/home/git/documents/bookmarks/cache.db "$BM_DIR"/cache.db
	#rsync -avzu "$BM_DIR"/cache.db git@svenmoeller.xyz:/home/git/documents/bookmarks/cache.db
}

html () {
	echo '<!DOCTYPE html>'
	echo '<meta charset="utf-8">'
	echo '<link rel="stylesheet" type="text/css" href="style.css" />'
	echo '<link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>ðŸ”–</text></svg>">'
	echo '<title>Bookmarks</title>'
	echo "<h1>Bookmarks</h1>"
	cat "$BM_DIR"/favorite | to_html favorite
	cat "$BM_DIR"/unread | to_html unread
}

to_html () {
	title="$(echo "$1" | head -c 1 | tr [:lower:] [:upper:])$(echo "$1" | tail -c +2)"
	echo "<h2>$title</h2>"
	echo "<pre>"
	sed -e 's_^\(\S*\)\s*$_\1 \1_' -e 's_\s_">_' -e 's_^_<a href="_' -e 's_$_</a>_'
	echo "</pre>"
}

edit () {
	cat > /dev/null
	"$EDITOR" "$BM_DIR/$1"
}

foo () {
	case "$2" in
		-r) random ;;
		-h) to_html $1 ;;
		-l) cat ;;
		-e) edit $1 ;;
		*) interactive $@ ;;
	esac
}

help () {
	bin="$(basename $1)"
	echo "Usage: $bin [COMMAND]"
	echo "Or:    $bin URL [TITLE]"
	echo ""
	echo "Commands:"
	grep "^	[a-z|]\+)" $1 | sed 's/)//' | tr '|' '\n' | awk '{print "\t"$1}'
}


if [ -z "$1" ] ; then
	cat "$BM_DIR/unread" | interactive unread;
	exit;
fi

case "$1" in
	unread|favorite|archive)
		cat "$BM_DIR/$1" | foo "$@" ;;
	all)
		cat "$BM_DIR"/unread "$BM_DIR"/favorite "$BM_DIR"/archive | foo "$@";;
	git|sync|html)
		"$@"; exit ;;
	http://*|https://*|-)
		add "$1" "$2"; exit ;;
	*)
		help "$0"; exit ;;
esac
