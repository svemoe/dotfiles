#!/bin/sh

[ -z "$selector" ] && selector=fzf

[ -z "$BM_DIR" ] \
  && echo "No directory specified!" \
  && exit 1

export GIT_WORK_TREE="$BM_DIR"
export GIT_DIR="$BM_DIR/.git"

add () {
	url="$1"
	cat $BM_DIR/{unread,favorite,archive} | grep "$url" \
	  && "$NOTIFY" "Already saved!" \
	  && exit
	[ -z "$2" ] \
	  && title="$(curl --compressed --location $url \
	    | grep -Eo '<title>.*</title>' \
	    | sed -E 's-</?title>--g')" \
	  || title="$2"
	
	echo "$url $title" >> $BM_DIR/unread
	
	"$NOTIFY" "Bookmark added! ($title)"
}

random () {
	shuf -n 1 "$BM_DIR/unread" | awk '{print $1}' | xargs "$LINK_HANDLER"
}

move () {
	sed -n "$1p" "$BM_DIR/$2" >> "$BM_DIR/$3"
	delete "$1" "$2"
}

delete () {
	sed -i "$1d" "$BM_DIR/$2"
}

open () {
	url="$1"
	"$LINK_HANDLER" "$url"
}

download () {
	url="$1"
	name="$(echo "$url" | sed 's_/$__' | rev | cut -d'/' -f1 | rev | sed 's_\..*__')"
	pandoc --verbose -o "$BM_DIR/saved/$name.epub" "$url"
}

qr () {
	url="$1"
	qrencode -t UTF8 "$url"
}

clip () {
	url="$1"
	echo "$url" | xclip -selection "clipboard"
}

interactive () {
	list="$1"
	actions="open\narchive\nfavorite\nunread\ndelete\ndownload\necho\nqr\nclip\n"
	l="$(cat -n "$BM_DIR/$list" | "$selector")"
	line="$(echo "$l" | awk '{print $1}')"
	url="$(echo "$l" | awk '{print $2}')"
	if [ -z "$line" ]; then exit; fi
	action="$(printf "$actions" | grep -v "$list" | "$selector")"
	if [ -z "$action" ]; then exit; fi
	case "$action" in
		unread|favorite|archive) move "$line" "$list" "$action" ;;
		delete) "$action" "$line" "$list" ;;
		open|download|echo|qr|clip) "$action" "$url" ;;
	esac
}

all () {
	actions="open\ndownload\necho\nqr\nclip"
	line="$(cat -n "$BM_DIR"/unread "$BM_DIR"/favorite "$BM_DIR"/archive | "$selector")"
	url="$(echo "$line" | awk '{print $2}')"
	if [ -z "$line" ]; then exit; fi
	action="$(printf "$actions" | "$selector")"
	"$action" "$url"
}

sync () {
	git diff --quiet || git commit -am "Update"
	git pull && git push
	rsync -avzu git@svenmoeller.xyz:/home/git/documents/bookmarks/cache.db "$BM_DIR"/cache.db
	rsync -avzu "$BM_DIR"/cache.db git@svenmoeller.xyz:/home/git/documents/bookmarks/cache.db
}

html () {
	echo '<!DOCTYPE html>'
	echo '<html>'
	echo '<head>'
	echo '<meta charset="utf-8">'
	echo '<title>Bookmarks</title>'
	echo '</head>'
	echo '<body>'
	echo "<h1>Bookmarks</h1>"
	to_html favorite
	to_html unread
	echo '</body>'
	echo '</html>'
}

to_html ()
{
	title="$(echo "$1" | head -c 1 | tr [:lower:] [:upper:])$(echo "$1" | tail -c +2)"
	echo "<h2>$title</h2>"
	echo "<ul>"
	sed -e 's_^\(\S*\)\s*$_\1 \1_' -e 's_\s_">_' "$BM_DIR/$1" -e 's_^_<li><a href="_' -e 's_$_</a></li>_'
	echo "</ul>"
}

help () {
	bin="$(basename $1)"
	echo "Usage: $bin [COMMAND]"
	echo "Or:    $bin URL [TITLE]"
	echo ""
	echo "Commands:"
	grep -E "^	[a-z|]+)" $1 | sed 's/)//' | tr '|' '\n' | awk '{print "\t"$1}'
}

if [ -z "$1" ]; then "$0" "unread"; exit; fi
case "$1" in
	unread|favorite|archive)
		interactive "$1" ;;
	git|sync|html|random|all)
		"$@"; exit ;;
	http://*|https://*)
		add "$1" "$2"; exit ;;
	*)
		help "$0"; exit ;;
esac
